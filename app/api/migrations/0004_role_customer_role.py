# Generated by Django 5.2.7 on 2025-10-26 05:48

import django.db.models.deletion
from django.db import migrations, models


def create_roles_and_assign_to_customers(apps, schema_editor):
    """Create default roles and assign 'customer' role to existing customers"""
    Role = apps.get_model('api', 'Role')
    Customer = apps.get_model('api', 'Customer')
    
    # Create the three roles
    owner_role = Role.objects.create(
        name='owner',
        description='Owner role with full access'
    )
    manager_role = Role.objects.create(
        name='manager',
        description='Manager role with management access'
    )
    customer_role = Role.objects.create(
        name='customer',
        description='Customer role with basic access'
    )
    
    # Assign 'customer' role to all existing customers
    Customer.objects.all().update(role=customer_role)


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_item_customers'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('customer', 'Customer')], help_text='Role name: owner, manager, or customer', max_length=20, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the role')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='role',
            field=models.ForeignKey(
                help_text='User role: owner, manager, or customer',
                null=True,  # Temporarily allow null
                on_delete=django.db.models.deletion.PROTECT,
                related_name='customers',
                to='api.role'
            ),
        ),
        migrations.RunPython(create_roles_and_assign_to_customers, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='customer',
            name='role',
            field=models.ForeignKey(
                help_text='User role: owner, manager, or customer',
                on_delete=django.db.models.deletion.PROTECT,
                related_name='customers',
                to='api.role'
            ),
        ),
    ]
